@using DAL.Entities
@using PL.Models;
@using System.Text.RegularExpressions
@model PaginatedList<PL.Models.ProductViewModel>


@{
    ViewData["Title"] = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>List Of Products</h1>
    <a asp-controller="Product" asp-action="Add">Create New</a>


    @using (Html.BeginForm("List", "Product", FormMethod.Get))
    {
    <p>
        Find By Name:
            @Html.TextBox("SearchString", ViewData["CurrentFilter"] as string)
        <input type="submit" class="btn btn-primary" value="Search" />
    </p>
    }


<table class="table" id="productTable">
    <thead>

        <tr>

            <th>
                <input type="checkbox" id="selectAll" /> Select All
            </th>

            <th>
                    @Html.ActionLink("Product Name", "List", new { sortOrder = ViewData["NameSortParm"] })
            </th>


            <th>
                    @(typeof(PL.Models.ProductViewModel).GetProperty("prodDesc").Name)
             
                    @* @Html.DisplayNameFor(model => item.prodDesc) *@
            </th>

            <th>
                    @(typeof(PL.Models.ProductViewModel).GetProperty("ProductCategory").PropertyType.GetProperty("categoryDesc").Name)
                    @* @Html.DisplayNameFor(model => item.ProductCategory.categoryDesc) *@
            </th>

            <th>
                    @Html.ActionLink("Active", "List", new { sortOrder = ViewData["IsActiveSortParm"] })
            </th>

            <th>
                    @* @(typeof(PL.Models.ProductViewModel).GetProperty("ProductPriceHistory").PropertyType.GetProperty("Price").Name)*@

            </th>

            <th>Product Images</th>
            <th></th>
            <th></th>
        </tr>


    </thead>

    <tbody>

        @foreach (var item in Model)
        {
            <tr>
                <td width="110">
                        <input type="checkbox" class="productCheckbox" value="@item.Id" />
                </td>

                <td width="130">
                        @Html.DisplayFor(modelItem => item.prodName)
                </td>

                <td width="100">
                        @Html.DisplayFor(modelItem => item.prodDesc)
                </td>

                <td width="100">
                        @Html.DisplayFor(modelItem => item.ProductCategory.categoryDesc)
                </td>

                <td width="80">
                        @Html.DisplayFor(modelItem => item.IsActive)
                </td>

                <td> 
                          @Html.DisplayFor(modelItem => item.ProductPriceHistory.Price) 
                </td>

                @* 
                <td>
                    @if (item.UploadFilesViewModel != null && item.UploadFilesViewModel.Any())
                    {
                        @foreach (var uploadFile in item.UploadFilesViewModel)
                        {
                            @if (!string.IsNullOrEmpty(uploadFile.ImageUrl) && uploadFile.ContentType.StartsWith(".jpg") || uploadFile.ContentType.StartsWith(".jpeg") || uploadFile.ContentType.StartsWith(".png") || uploadFile.ContentType.StartsWith(".gif") || uploadFile.ContentType.StartsWith(".bmp") || uploadFile.ContentType.StartsWith(".webp"))
                            {
                                <a href="@Url.Content(uploadFile.ImageUrl)" target="_blank">
                                    <img src="@Url.Content(uploadFile.ImageUrl)" alt="@uploadFile.FileName" class="product-image" width="40" height="40" />
                                </a>
                            }
                        }
                    }
                    else
                    {
                        <p>No uploaded files for this product.</p>
                    }
                </td>
                *@


               <td width="190">

                    @if (item.UploadFilesViewModel != null && item.UploadFilesViewModel.Any())
                    {
                        @foreach (var uploadFile in item.UploadFilesViewModel)
                        {
                            <a href="@uploadFile.ImageUrl" target="_blank">
                                <img src="@uploadFile.ImageUrl" alt="@uploadFile.FileName" class="product-image" width="50" height="50" />
                            </a>
                        }
                    }
                    else
                    {
                         <p style="color: lightcoral;">No Image</p>
                    }
                </td> 

                <td width="200"></td>

                <td>

                    <a class="btn btn-primary" asp-action="Update" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="btn btn-primary" asp-action="Delete" asp-route-id="@item.Id">Delete</a>

                    <a onclick="toggleActivation(this,'@Url.Action("ToggleActive", "Product")')"
                               data-product-id="@item.Id"
                               class="btn @(item.IsActive ? "btn-success" : "btn-danger")">
                               @(item.IsActive ? "Active" : "Inactive")<a>

                </td>
            </tr>
        }   



            @section Scripts
                {
            <script src="~/js/ToggleActive.js"></script>
            <script src="~/js/SelectDeselect.js"></script>
        }
    </tbody>
</table>

<button type="button" class="btn btn-success" id="deleteButton"> Delete Selected Products </button>
<br />

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

<div style="text-align: center;">
    <a asp-action="List" asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn btn-primary @(prevDisabled)">Previous</a>
    <a asp-action="List" asp-route-pageNumber="@(Model.PageIndex + 1)" class="btn btn-primary @(nextDisabled)">Next</a>
</div>





